{"version":3,"sources":["SafeAreaView.tsx"],"names":["TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","_emulateUnlessSupported","emulateUnlessSupported","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","React","useMemo","StyleSheet","flatten","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle"],"mappings":"gdAAA,oDACA,yCACA,kD,8FAIA,GAAMA,CAAAA,GAAG,CAAM,CAAf,CACMC,KAAK,CAAI,CADf,CAEMC,MAAM,CAAG,CAFf,CAGMC,IAAI,CAAK,CAHf,CAIMC,GAAG,CAAM,EAJf,CAQA,GAAMC,CAAAA,cAAoC,CAAG,CAC3CC,GAAG,CAAE,CADsC,CAE3CC,KAAK,CAAEN,KAFoC,CAG3CO,MAAM,CAAEN,MAHmC,CAI3CO,IAAI,CAAEN,IAJqC,CAA7C,CAOO,QAASO,CAAAA,YAAT,MAKqB,IAJ1BC,CAAAA,KAI0B,MAJ1BA,KAI0B,CAHFC,uBAGE,MAH1BC,sBAG0B,CAF1BC,KAE0B,MAF1BA,KAE0B,CADvBC,IACuB,wFAC1B,GAAMC,CAAAA,MAAM,CAAG,wCAAf,CAEA,GAAMC,CAAAA,WAAW,CACfH,KAAK,EAAI,IAAT,CACIA,KAAK,CAACI,MAAN,CAAa,SAACC,KAAD,CAAQC,IAAR,QAAiBD,CAAAA,KAAK,CAAGd,cAAc,CAACe,IAAD,CAAvC,EAAb,CAA4D,CAA5D,CADJ,CAEIhB,GAHN,CAKA,GAAMiB,CAAAA,YAAY,CAAGC,KAAK,CAACC,OAAN,CAAc,UAAM,WASnCC,wBAAWC,OAAX,CAAmBd,KAAnB,CATmC,qBAErCe,OAFqC,CAErCA,OAFqC,wBAE3B,CAF2B,2CAGrCC,eAHqC,CAGrCA,eAHqC,gCAGnBD,OAHmB,mDAIrCE,iBAJqC,CAIrCA,iBAJqC,gCAIjBF,OAJiB,8CAKrCG,UALqC,CAKrCA,UALqC,2BAKxBF,eALwB,2CAMrCG,YANqC,CAMrCA,YANqC,6BAMtBF,iBANsB,8CAOrCG,aAPqC,CAOrCA,aAPqC,8BAOrBJ,eAPqB,6CAQrCK,WARqC,CAQrCA,WARqC,4BAQvBJ,iBARuB,mBAWvC,GAAMK,CAAAA,YAAY,CAAG,CACnBJ,UAAU,CAAEA,UAAU,EAAIZ,WAAW,CAAGjB,GAAd,CAAoBgB,MAAM,CAACV,GAA3B,CAAiC,CAArC,CADH,CAEnBwB,YAAY,CAAEA,YAAY,EAAIb,WAAW,CAAGhB,KAAd,CAAsBe,MAAM,CAACT,KAA7B,CAAqC,CAAzC,CAFP,CAGnBwB,aAAa,CAAEA,aAAa,EAAId,WAAW,CAAGf,MAAd,CAAuBc,MAAM,CAACR,MAA9B,CAAuC,CAA3C,CAHT,CAInBwB,WAAW,CAAEA,WAAW,EAAIf,WAAW,CAAGd,IAAd,CAAqBa,MAAM,CAACP,IAA5B,CAAmC,CAAvC,CAJL,CAArB,CAOA,MAAO,CAACE,KAAD,CAAQsB,YAAR,CAAP,CACD,CAnBoB,CAmBlB,CAACtB,KAAD,CAAQK,MAAR,CAAgBC,WAAhB,CAnBkB,CAArB,CAqBA,MAAO,qBAAC,iBAAD,wBAAM,KAAK,CAAEI,YAAb,EAA+BN,IAA/B,+EAAP,CACD","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b1000,\n      BOTTOM = 0b1000,\n      LEFT   = 0b1000,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: 0b1000,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style,\n  emulateUnlessSupported: _emulateUnlessSupported,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const {\n      padding = 0,\n      paddingVertical = padding,\n      paddingHorizontal = padding,\n      paddingTop = paddingVertical,\n      paddingRight = paddingHorizontal,\n      paddingBottom = paddingVertical,\n      paddingLeft = paddingHorizontal,\n    } = StyleSheet.flatten(style) as Record<string, number>;\n\n    const paddingStyle = {\n      paddingTop: paddingTop + (edgeBitmask & TOP ? insets.top : 0),\n      paddingRight: paddingRight + (edgeBitmask & RIGHT ? insets.right : 0),\n      paddingBottom: paddingBottom + (edgeBitmask & BOTTOM ? insets.bottom : 0),\n      paddingLeft: paddingLeft + (edgeBitmask & LEFT ? insets.left : 0),\n    };\n\n    return [style, paddingStyle];\n  }, [style, insets, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]}